// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DTUFItnessApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240326211541_ConsolidateUserNotificationsConfig")]
    partial class ConsolidateUserNotificationsConfig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClubModel", b =>
                {
                    b.Property<string>("ClubID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("OwnerUserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClubID");

                    b.ToTable("clubs", (string)null);
                });

            modelBuilder.Entity("DtuFitnessApi.Models.ClubMember", b =>
                {
                    b.Property<int>("ClubMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClubId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("ClubMemberId");

                    b.HasIndex("ClubId");

                    b.HasIndex("MemberId");

                    b.ToTable("clubmembers", (string)null);
                });

            modelBuilder.Entity("DtuFitnessApi.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClubID")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("EventID");

                    b.HasIndex("ClubID");

                    b.ToTable("events", (string)null);
                });

            modelBuilder.Entity("DtuFitnessApi.Models.ExerciseLog", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExerciseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ExerciseID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("LogID");

                    b.HasIndex("ExerciseID");

                    b.HasIndex("UserID");

                    b.ToTable("exercise_logs", (string)null);
                });

            modelBuilder.Entity("DtuFitnessApi.Models.ExerciseMetric", b =>
                {
                    b.Property<int>("ExerciseMetricID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ExerciseLogID")
                        .HasColumnType("int");

                    b.Property<int>("MetricID")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ExerciseMetricID");

                    b.HasIndex("ExerciseLogID");

                    b.HasIndex("MetricID");

                    b.ToTable("exercise_metrics", (string)null);
                });

            modelBuilder.Entity("DtuFitnessApi.Models.ExerciseModel", b =>
                {
                    b.Property<int>("ExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ExerciseID");

                    b.ToTable("exercises", (string)null);
                });

            modelBuilder.Entity("DtuFitnessApi.Models.Metric", b =>
                {
                    b.Property<int>("MetricID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("MetricID");

                    b.ToTable("metrics", (string)null);
                });

            modelBuilder.Entity("DtuFitnessApi.Models.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NotificationID");

                    b.HasIndex("EventID");

                    b.ToTable("notifications", (string)null);
                });

            modelBuilder.Entity("DtuFitnessApi.Models.UserNotification", b =>
                {
                    b.Property<int>("UserNotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IdentityUserID")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("NotificationID")
                        .HasColumnType("int");

                    b.Property<int>("NotificationID1")
                        .HasColumnType("int");

                    b.Property<string>("UserIdentityUserID")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserNotificationID");

                    b.HasIndex("IdentityUserID");

                    b.HasIndex("NotificationID");

                    b.HasIndex("NotificationID1");

                    b.HasIndex("UserIdentityUserID");

                    b.ToTable("user_notifications", (string)null);
                });

            modelBuilder.Entity("UserProfile", b =>
                {
                    b.Property<string>("IdentityUserID")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdentityUserID");

                    b.ToTable("user_profiles", (string)null);
                });

            modelBuilder.Entity("DtuFitnessApi.Models.ClubMember", b =>
                {
                    b.HasOne("ClubModel", "Club")
                        .WithMany("ClubMembers")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserProfile", "UserProfile")
                        .WithMany("ClubMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.Event", b =>
                {
                    b.HasOne("ClubModel", "Club")
                        .WithMany("Events")
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.ExerciseLog", b =>
                {
                    b.HasOne("DtuFitnessApi.Models.ExerciseModel", "ExerciseModel")
                        .WithMany("ExerciseLogs")
                        .HasForeignKey("ExerciseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserProfile", "UserProfile")
                        .WithMany("ExerciseLogs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseModel");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.ExerciseMetric", b =>
                {
                    b.HasOne("DtuFitnessApi.Models.ExerciseLog", "ExerciseLog")
                        .WithMany("ExerciseMetrics")
                        .HasForeignKey("ExerciseLogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DtuFitnessApi.Models.Metric", "Metric")
                        .WithMany("ExerciseMetrics")
                        .HasForeignKey("MetricID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseLog");

                    b.Navigation("Metric");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.Notification", b =>
                {
                    b.HasOne("DtuFitnessApi.Models.Event", "Event")
                        .WithMany("Notifications")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.UserNotification", b =>
                {
                    b.HasOne("UserProfile", null)
                        .WithMany("UserNotifications")
                        .HasForeignKey("IdentityUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DtuFitnessApi.Models.Notification", null)
                        .WithMany("UserNotifications")
                        .HasForeignKey("NotificationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DtuFitnessApi.Models.Notification", "Notification")
                        .WithMany()
                        .HasForeignKey("NotificationID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserProfile", "User")
                        .WithMany()
                        .HasForeignKey("UserIdentityUserID");

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClubModel", b =>
                {
                    b.Navigation("ClubMembers");

                    b.Navigation("Events");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.Event", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.ExerciseLog", b =>
                {
                    b.Navigation("ExerciseMetrics");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.ExerciseModel", b =>
                {
                    b.Navigation("ExerciseLogs");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.Metric", b =>
                {
                    b.Navigation("ExerciseMetrics");
                });

            modelBuilder.Entity("DtuFitnessApi.Models.Notification", b =>
                {
                    b.Navigation("UserNotifications");
                });

            modelBuilder.Entity("UserProfile", b =>
                {
                    b.Navigation("ClubMembers");

                    b.Navigation("ExerciseLogs");

                    b.Navigation("UserNotifications");
                });
#pragma warning restore 612, 618
        }
    }
}
